{"version":3,"file":"static/js/424.615998f1.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/DialogTitle/DialogTitle.js","components/table/TableHeader.tsx","views/content/viewContentAssets/ViewContentAssets.tsx","pages/Content/contentAssets.tsx","../node_modules/@mui/material/esm/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/esm/DialogActions/DialogActions.js","../node_modules/@mui/material/esm/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/esm/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/esm/DialogContent/DialogContent.js","../node_modules/@mui/material/esm/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/esm/DialogContentText/DialogContentText.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogTitleUtilityClass } from \"./dialogTitleClasses.js\";\nimport DialogContext from \"../Dialog/DialogContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root'\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n    className,\n    id: idProp,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, {\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp ?? titleId,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","// ** MUI Imports\nimport { Typography } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport { useEffect, useState } from \"react\";\n\n// ** Icon Imports\nimport Icon from \"components/icon\";\n\ninterface TableHeaderProps {\n  toggle: () => void;\n  handleFilter: (val: string) => void;\n  placeholder: string;\n}\n\nconst TableHeader = (props: TableHeaderProps) => {\n  // ** Props\n  const { handleFilter, toggle, placeholder } = props;\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  useEffect(() => {\n    handleFilter(searchValue);\n  }, [searchValue, handleFilter]);\n\n  return (\n    <Box\n      sx={{\n        p: 6,\n        gap: 4,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n        }}\n      >\n        <Typography\n          style={{ fontSize: \"1.25rem\", fontWeight: 500, width: \"50%\" }}\n        ></Typography>\n        <TextField\n          size=\"small\"\n          value={searchValue}\n          sx={{ width: \"50%\" }}\n          fullWidth\n          placeholder={placeholder}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          onClick={(e) => handleFilter(searchValue)}\n          sx={{ ml: 2 }}\n        >\n          Search\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TableHeader;\n","import { useEffect, useCallback, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport Icon from \"components/icon\";\nimport CustomChip from \"components/mui/chip\";\nimport CustomAvatar from \"components/mui/avatar\";\nimport { getInitials } from \"../../../utils\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Chip, Divider, Tooltip } from \"@mui/material\";\nimport { ThemeColor } from \"../../../@core/types\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport TableHeader from \"components/table/TableHeader\";\n// Dummy Data for Users\nconst usersListLoading = false;\nconst dummyUsers = [\n  {\n    id: \"1\",\n    contentID: \"Amit Sharma\",\n    name: \"RefArchGlobal\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"online\",\n  },\n  {\n    id: \"2\",\n    contentID: \"Priya Singh\",\n    name: \"RefArchGlobal\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"offline\",\n  },\n  {\n    id: \"3\",\n    contentID: \"Rahul Verma\",\n    name: \"Content\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"inactive\",\n  },\n  {\n    id: \"4\",\n    contentID: \"Sneha Gupta\",\n    name: \"Checkout\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"online\",\n  },\n  {\n    id: \"5\",\n    contentID: \"Amit Sharma\",\n    name: \"RefArchGlobal\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"online\",\n  },\n  {\n    id: \"6\",\n    contentID: \"Priya Singh\",\n    name: \"RefArchGlobal\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"offline\",\n  },\n  {\n    id: \"7\",\n    contentID: \"Rahul Verma\",\n    name: \"RefArchGlobal\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"inactive\",\n  },\n  {\n    id: \"8\",\n    contentID: \"Sneha Gupta\",\n    name: \"RefArchGlobal\",\n    description:\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\",\n    status: \"online\",\n  },\n];\n\ninterface UserRowColorType {\n  [key: string]: ThemeColor;\n}\nconst userStatusObj: UserRowColorType = {\n  online: \"success\",\n  offline: \"warning\",\n  inactive: \"secondary\",\n};\n\ninterface CellType {\n  row: any;\n}\n// Prevent Click Event Bubbling\nconst disableClickEventBubbling = (params: any) => {\n  params?.event?.stopPropagation();\n};\n\nconst ViewContentAssets = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [filterList, setFilterList] = useState<any[]>(dummyUsers);\n  const [selectedRole, setSelectedRole] = useState(\"\");\n  const [page, setPage] = useState<number>(0);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [open, setOpen] = useState<boolean>(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const [selectedId, setSelectedId] = useState<string>(\"\");\n  const [selectedUser, setSelectedUser] = useState<any>({});\n  const [isDeleting, setIsDeleting] = useState(false);\n  const navigate = useNavigate();\n\n  const handleClickOpen = (row: any) => {\n    setOpen(true);\n    setSelectedId(row);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedId(\"\");\n  };\n\n  const handleDelete = () => {\n    setIsDeleting(true);\n    setTimeout(() => {\n      setFilterList(filterList.filter((user) => user.id !== selectedId));\n      setIsDeleting(false);\n      setOpen(false);\n    }, 1000); // Simulate async delete\n  };\n\n  const handleFilter = useCallback((val: string) => {\n    setValue(val);\n    const filteredData = dummyUsers.filter((item: any) => {\n      const startsWith =\n        item.contentID.toLowerCase().startsWith(val.toLowerCase()) ||\n        item.name.toLowerCase().startsWith(val.toLowerCase());\n      const includes =\n        item.contentID.toLowerCase().includes(val.toLowerCase()) ||\n        item.name.toLowerCase().includes(val.toLowerCase());\n      return val === \"\" ? item : startsWith || includes;\n    });\n    setFilterList(filteredData);\n  }, []);\n\n  const [sortModel, setSortModel] = useState<any>([\n    { field: \"contentID\", sort: \"asc\" },\n  ]);\n\n  const handleSortModelChange = (model: any) => {\n    setSortModel(model);\n  };\n\n  const columns = [\n    {\n      flex: 0.1,\n      minWidth: 200,\n      field: \"contentID\",\n      headerName: \"Library ID\",\n      renderCell: ({ row }: CellType) => {\n        const { contentID } = row;\n\n        return (\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"flex-start\",\n                flexDirection: \"column\",\n              }}\n            >\n              <Typography\n                noWrap\n                component=\"a\"\n                sx={{\n                  fontWeight: 400,\n                  color: theme.palette.text.secondary,\n                  textDecoration: \"none\",\n                }}\n              >\n                {contentID}\n              </Typography>\n            </Box>\n          </Box>\n        );\n      },\n    },\n    {\n      flex: 0.2,\n      minWidth: 200,\n      field: \"name\",\n      headerName: \"Name\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <Typography noWrap sx={{ color: \"text.secondary\" }}>\n            {row.name}\n          </Typography>\n        );\n      },\n    },\n    {\n      flex: 0.5,\n      minWidth: 350,\n      field: \"description\",\n      headerName: \"Description\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <Typography noWrap sx={{ color: \"text.secondary\" }}>\n            {row.description}\n          </Typography>\n        );\n      },\n    },\n    {\n      flex: 0.1,\n      minWidth: 110,\n      field: \"status\",\n      headerName: \"Status\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <CustomChip\n            rounded\n            skin=\"light\"\n            size=\"small\"\n            label={row.status}\n            color={userStatusObj[row.status]}\n          />\n        );\n      },\n    },\n    {\n      flex: 0.1,\n      minWidth: 100,\n      sortable: false,\n      field: \"actions\",\n      headerName: \"Actions\",\n      renderCell: ({ row }: CellType) => (\n        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Tooltip title=\"Edit User\" placement=\"top\" arrow>\n            <IconButton\n              onClick={() => {\n                navigate(`add-Content-assets/${row.contentID}`);\n                setSelectedUser(row);\n              }}\n              color=\"primary\"\n            >\n              <Icon icon=\"bx:edit-alt\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Delete User\" placement=\"top\" arrow>\n            <IconButton\n              onClick={() => handleClickOpen(row?.id || row?._id)}\n              color=\"error\"\n            >\n              <Icon icon=\"bx:trash\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      ),\n    },\n  ];\n\n  return (\n    <Grid container spacing={6}>\n      <Grid size={12}>\n        <Card sx={{ width: \"90vw\" }}>\n          <TableHeader\n            handleFilter={handleFilter}\n            // toggle={toggleAddUserDrawer}\n            placeholder={\"Search Library folder...\"}\n          />\n          <Divider sx={{ m: \"0 !important\" }} />\n          <DataGrid\n            autoHeight\n            sortModel={sortModel}\n            onSortModelChange={handleSortModelChange}\n            getRowId={(row) => row?.id || row?._id}\n            rows={filterList}\n            columns={columns}\n            loading={usersListLoading}\n            rowCount={filterList.length}\n            disableSelectionOnClick\n            rowsPerPageOptions={[10, 25]}\n            checkboxSelection\n            paginationMode=\"server\"\n            pageSize={pageSize}\n            pagination\n            page={page}\n            onPageChange={(newPage: any) => setPage(newPage)}\n            onPageSizeChange={(newPageSize: number) => {\n              setPageSize(newPageSize);\n              setPage(0);\n            }}\n            getRowHeight={() => \"auto\"}\n            disableColumnMenu\n            disableColumnSelector\n            onCellClick={disableClickEventBubbling}\n          />\n        </Card>\n      </Grid>\n      {/* {isDrawerOpen && (\n        <DrawerEditUser\n          open={isDrawerOpen}\n          toggle={() => setIsDrawerOpen((pre) => !pre)}\n          selectedUser={selectedUser}\n          roles={dummyRoles}\n        />\n      )} */}\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Deleting User?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure to delete this user? Once you delete, you cannot revert\n            this.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Cancel\n          </Button>\n          <LoadingButton\n            loading={isDeleting}\n            onClick={handleDelete}\n            color=\"error\"\n            variant=\"contained\"\n            autoFocus\n          >\n            Confirm\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default ViewContentAssets;\n","import React, { useState } from \"react\";\nimport { Box, CardHeader, Divider, Typography, useTheme } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport ViewContentAssets from \"views/content/viewContentAssets/ViewContentAssets\";\n\nexport default function ContentAssets() {\n  const theme = useTheme();\n  return (\n    <Grid\n      container\n      spacing={6}\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ p: 10 }}\n    >\n      <Grid item size={{ md: 12 }}>\n        <Typography variant=\"h5\" sx={{ color: \"text.main\", fontWeight: 800 }}>\n          Libraries\n        </Typography>\n        <Divider sx={{ m: \"0\", color: theme.palette.customColors.dark }} />\n      </Grid>\n      <Grid item size={{ md: 12 }}>\n        <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n          {\n            \"The list below contains all libraries defined by your organization, along with some statistical information about the library content.\"\n          }\n          <br />\n          {\n            \"- Libraries of the type 'Private' are owned by site, can only be used by that side, and can't be deleted.\"\n          }\n          <br />\n          {\n            \"-Libraries of the type 'Shared' are owned by the oraganization, can be shared by mulitple sites, and can deleted by user.\"\n          }\n        </Typography>\n        <br />\n        <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n          {\n            \"The administration of content libraries, including the ability to create new ones, is located here.\"\n          }\n        </Typography>\n        <Divider sx={{ m: \"0\", color: theme.palette.customColors.dark }} />\n      </Grid>\n      <Grid item size={{ md: 12 }}>\n        <ViewContentAssets />\n      </Grid>\n    </Grid>\n  );\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogActionsUtilityClass } from \"./dialogActionsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableSpacing,\n    style: {\n      '& > :not(style) ~ :not(style)': {\n        marginLeft: 8\n      }\n    }\n  }]\n});\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n    className,\n    disableSpacing = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableSpacing\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogContentUtilityClass } from \"./dialogContentClasses.js\";\nimport dialogTitleClasses from \"../DialogTitle/dialogTitleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.dividers,\n    style: {\n      padding: '16px 24px',\n      borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dividers,\n    style: {\n      [`.${dialogTitleClasses.root} + &`]: {\n        paddingTop: 0\n      }\n    }\n  }]\n})));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n  const {\n    className,\n    dividers = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    dividers\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getDialogContentTextUtilityClass } from \"./dialogContentTextClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return {\n    ...classes,\n    // forward classes to the Typography\n    ...composedClasses\n  };\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root'\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n    children,\n    className,\n    ...ownerState\n  } = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, {\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ...props,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["_excluded","DialogTitleRoot","styled","Typography","name","slot","padding","flex","React","inProps","ref","props","useDefaultProps","className","id","idProp","other","_objectWithoutProperties","ownerState","classes","composeClasses","root","getDialogTitleUtilityClass","useUtilityClasses","titleId","DialogContext","_jsx","_objectSpread","component","clsx","variant","handleFilter","toggle","placeholder","searchValue","setSearchValue","useState","useEffect","Box","sx","p","gap","display","flexWrap","alignItems","justifyContent","children","_jsxs","flexDirection","width","style","fontSize","fontWeight","TextField","size","value","fullWidth","onChange","e","target","Button","onClick","ml","dummyUsers","contentID","description","status","userStatusObj","online","offline","inactive","disableClickEventBubbling","params","_params$event","event","stopPropagation","ViewContentAssets","setValue","pageSize","setPageSize","filterList","setFilterList","selectedRole","setSelectedRole","page","setPage","isDrawerOpen","setIsDrawerOpen","open","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","selectedId","setSelectedId","selectedUser","setSelectedUser","isDeleting","setIsDeleting","navigate","useNavigate","handleClose","useCallback","val","filteredData","filter","item","startsWith","toLowerCase","includes","sortModel","setSortModel","field","sort","columns","minWidth","headerName","renderCell","_ref","row","noWrap","color","palette","text","secondary","textDecoration","_ref2","_ref3","_ref4","CustomChip","rounded","skin","label","sortable","_ref5","Tooltip","title","placement","arrow","IconButton","concat","Icon","icon","handleClickOpen","_id","Grid","container","spacing","Card","TableHeader","Divider","m","DataGrid","autoHeight","onSortModelChange","model","getRowId","rows","loading","rowCount","length","disableSelectionOnClick","rowsPerPageOptions","checkboxSelection","paginationMode","pagination","onPageChange","newPage","onPageSizeChange","newPageSize","getRowHeight","disableColumnMenu","disableColumnSelector","onCellClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","LoadingButton","handleDelete","setTimeout","user","ContentAssets","direction","md","customColors","dark","getDialogActionsUtilityClass","generateUtilityClass","generateUtilityClasses","DialogActionsRoot","overridesResolver","styles","disableSpacing","variants","marginLeft","slots","getDialogContentUtilityClass","DialogContentRoot","dividers","memoTheme","WebkitOverflowScrolling","overflowY","borderTop","vars","divider","borderBottom","dialogTitleClasses","paddingTop","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","composedClasses"],"sourceRoot":""}