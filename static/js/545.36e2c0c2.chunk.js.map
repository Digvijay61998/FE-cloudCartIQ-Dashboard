{"version":3,"file":"static/js/545.36e2c0c2.chunk.js","mappings":"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","sources":["views/content/ViewContetntSharedLib.tsx","pages/Content/libraries.tsx"],"sourcesContent":["import { useEffect, useCallback, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport Icon from \"../../components/icon\";\nimport CustomChip from \"../../components/mui/chip\";\nimport CustomAvatar from \"../../components/mui/avatar\";\nimport { getInitials } from \"../../utils\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Chip, Tooltip } from \"@mui/material\";\nimport { ThemeColor } from \"../../@core/types\";\nimport { Link, useNavigate } from \"react-router-dom\";\n// Dummy Data for Users\nconst usersListLoading = false;\nconst dummyUsers = [\n  {\n    id: \"1\",\n    libraryID: \"Amit Sharma\",\n    site: \"RefArchGlobal\",\n    type: \"Private\",\n    channelAssignmentCMS: \"\",\n    folder: \"16\",\n    contentAssets: \"5,200\",\n    role: \"admin\",\n    status: \"online\",\n    assignedBots: [{ name: \"Bot1\" }, { name: \"Bot2\" }],\n    tags: [{ name: \"VIP\" }, { name: \"Active\" }],\n    profilePic: \"\",\n  },\n  {\n    id: \"2\",\n    libraryID: \"Priya Singh\",\n    site: \"RefArchGlobal\",\n    type: \"Private\",\n    channelAssignmentCMS: \"\",\n    folder: \"16\",\n    contentAssets: \"5,200\",\n    role: \"manager\",\n    status: \"offline\",\n    assignedBots: [{ name: \"Bot3\" }],\n    tags: [{ name: \"New\" }],\n    profilePic: \"/images/avatars/priya.png\",\n  },\n  {\n    id: \"3\",\n    libraryID: \"Rahul Verma\",\n    site: \"RefArchGlobal\",\n    type: \"Private\",\n    channelAssignmentCMS: \"\",\n    folder: \"16\",\n    contentAssets: \"5,200\",\n    role: \"agent\",\n    status: \"inactive\",\n    assignedBots: [],\n    tags: [{ name: \"Support\" }],\n    profilePic: \"\",\n  },\n  {\n    id: \"4\",\n    libraryID: \"Sneha Gupta\",\n    site: \"RefArchGlobal\",\n    type: \"Private\",\n    channelAssignmentCMS: \"\",\n    folder: \"16\",\n    contentAssets: \"5,200\",\n    role: \"creator\",\n    status: \"online\",\n    assignedBots: [{ name: \"Bot4\" }, { name: \"Bot5\" }],\n    tags: [],\n    profilePic: \"\",\n  },\n];\n\n// Dummy Roles for Filter Dropdown\nconst dummyRoles = [\n  { value: \"all\", label: \"All\" },\n  { value: \"admin\", label: \"Admin\" },\n  { value: \"manager\", label: \"Manager\" },\n  { value: \"agent\", label: \"Agent\" },\n  { value: \"creator\", label: \"Creator\" },\n];\n\n// Role and Status Objects\ninterface UserRoleType {\n  [key: string]: { icon: string; color: ThemeColor };\n}\n\ninterface UserRowColorType {\n  [key: string]: ThemeColor;\n}\n\nconst userRoleObj: UserRoleType = {\n  admin: { icon: \"eos-icons:admin-outlined\", color: \"error\" },\n  auditor: { icon: \"ant-design:audit-outlined\", color: \"warning\" },\n  manager: { icon: \"mdi:account-tie-hat\", color: \"success\" },\n  agent: { icon: \"ic:round-support-agent\", color: \"info\" },\n  creator: { icon: \"uil:create-dashboard\", color: \"primary\" },\n};\n\nconst userStatusObj: UserRowColorType = {\n  online: \"success\",\n  offline: \"warning\",\n  inactive: \"secondary\",\n};\n\ninterface CellType {\n  row: any;\n}\n// Render Client Avatar\nconst renderClient = (row: any) => {\n  if (row?.profilePic?.length) {\n    return (\n      <CustomAvatar\n        src={row.profilePic}\n        sx={{ mr: 4, width: 30, height: 30 }}\n      />\n    );\n  } else {\n    return (\n      <CustomAvatar\n        skin=\"light\"\n        color={userRoleObj[row?.role]?.color || \"secondary\"}\n        sx={{ mr: 4, width: 30, height: 30, fontSize: \"0.875rem\" }}\n      >\n        {getInitials(row.libraryID ? row.libraryID.toUpperCase() : \"-----\")}\n      </CustomAvatar>\n    );\n  }\n};\n\nconst ViewContetntSharedLib = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [filterList, setFilterList] = useState<any[]>(dummyUsers);\n  const [selectedRole, setSelectedRole] = useState(\"\");\n  const [page, setPage] = useState<number>(0);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [open, setOpen] = useState<boolean>(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const [selectedId, setSelectedId] = useState<string>(\"\");\n  const [selectedUser, setSelectedUser] = useState<any>({});\n  const [isDeleting, setIsDeleting] = useState(false);\n  const navigate = useNavigate();\n\n  const handleClickOpen = (row: any) => {\n    setOpen(true);\n    setSelectedId(row);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedId(\"\");\n  };\n\n  const handleDelete = () => {\n    setIsDeleting(true);\n    setTimeout(() => {\n      setFilterList(filterList.filter((user) => user.id !== selectedId));\n      setIsDeleting(false);\n      setOpen(false);\n    }, 1000); // Simulate async delete\n  };\n\n  const handleFilter = useCallback((val: string) => {\n    setValue(val);\n    const filteredData = dummyUsers.filter((item: any) => {\n      const startsWith =\n        item.libraryID.toLowerCase().startsWith(val.toLowerCase()) ||\n        item.site.toLowerCase().startsWith(val.toLowerCase());\n      const includes =\n        item.libraryID.toLowerCase().includes(val.toLowerCase()) ||\n        item.site.toLowerCase().includes(val.toLowerCase());\n      return val === \"\" ? item : startsWith || includes;\n    });\n    setFilterList(filteredData);\n  }, []);\n\n  const handlePlanChange = useCallback((e: SelectChangeEvent) => {\n    setSelectedRole(e.target.value);\n    const filteredData =\n      e.target.value === \"all\" || !e.target.value\n        ? dummyUsers\n        : dummyUsers.filter((user) => user.role === e.target.value);\n    setFilterList(filteredData);\n  }, []);\n\n  const [sortModel, setSortModel] = useState<any>([\n    { field: \"libraryID\", sort: \"asc\" },\n  ]);\n\n  const handleSortModelChange = (model: any) => {\n    setSortModel(model);\n  };\n\n  // Prevent Click Event Bubbling\n  const disableClickEventBubbling = (params: any) => {\n    params?.event?.stopPropagation();\n    const id = params?.row?.id || params?.row?._id;\n    if (id) {\n      navigate(`library-folders`);\n    }\n  };\n\n  const columns = [\n    {\n      flex: 0.2,\n      minWidth: 150,\n      width: 500,\n      field: \"libraryID\",\n      headerName: \"Library ID\",\n      renderCell: ({ row }: CellType) => {\n        const { libraryID } = row;\n\n        return (\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n            {renderClient(row)}\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"flex-start\",\n                flexDirection: \"column\",\n              }}\n            >\n              <Typography\n                noWrap\n                component=\"a\"\n                sx={{\n                  fontWeight: 400,\n                  color: theme.palette.text.secondary,\n                  textDecoration: \"none\",\n                }}\n              >\n                {libraryID}\n              </Typography>\n            </Box>\n          </Box>\n        );\n      },\n    },\n    {\n      flex: 0.1,\n      minWidth: 100,\n      field: \"type\",\n      headerName: \"Type\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <Typography noWrap sx={{ color: \"text.secondary\" }}>\n            {row.type}\n          </Typography>\n        );\n      },\n    },\n    {\n      flex: 0.3,\n      minWidth: 150,\n      field: \"site\",\n      headerName: \"Site Assignments\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <Typography noWrap sx={{ color: \"text.secondary\" }}>\n            {row.site}\n          </Typography>\n        );\n      },\n    },\n    {\n      flex: 0.3,\n      minWidth: 150,\n      field: \"channelAssignmentCMS\",\n      headerName: \"CMS Channel Assignment\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <Typography noWrap sx={{ color: \"text.secondary\" }}>\n            {row.channelAssignmentCMS}\n          </Typography>\n        );\n      },\n    },\n    {\n      flex: 0.1,\n      minWidth: 150,\n      field: \"folder\",\n      headerName: \"Folder\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <Typography noWrap sx={{ color: \"text.secondary\" }}>\n            {row.folder}\n          </Typography>\n        );\n      },\n    },\n    {\n      flex: 0.1,\n      minWidth: 150,\n      field: \"contentAssets\",\n      headerName: \"Content Assets\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <Typography noWrap sx={{ color: \"text.secondary\" }}>\n            {row.contentAssets}\n          </Typography>\n        );\n      },\n    },\n    {\n      flex: 0.2,\n      minWidth: 100,\n      field: \"status\",\n      headerName: \"Status\",\n      renderCell: ({ row }: CellType) => {\n        return (\n          <CustomChip\n            rounded\n            skin=\"light\"\n            size=\"small\"\n            label={row.status}\n            color={userStatusObj[row.status]}\n          />\n        );\n      },\n    },\n  ];\n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={12}>\n        <Card sx={{ width: \"90vw\" }}>\n          <DataGrid\n            autoHeight\n            sortModel={sortModel}\n            onSortModelChange={handleSortModelChange}\n            getRowId={(row) => row?.id || row?._id}\n            rows={filterList}\n            columns={columns}\n            loading={usersListLoading}\n            rowCount={filterList.length}\n            disableSelectionOnClick\n            rowsPerPageOptions={[10, 25]}\n            // checkboxSelection\n            paginationMode=\"server\"\n            pageSize={pageSize}\n            pagination\n            page={page}\n            onPageChange={(newPage: any) => setPage(newPage)}\n            onPageSizeChange={(newPageSize: number) => {\n              setPageSize(newPageSize);\n              setPage(0);\n            }}\n            getRowHeight={() => \"auto\"}\n            disableColumnMenu\n            disableColumnSelector\n            onCellClick={disableClickEventBubbling}\n          />\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ViewContetntSharedLib;\n","import React, { useState } from \"react\";\nimport { Box, CardHeader, Divider, Typography, useTheme } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport UserList from \"../../components/table/Table\";\nimport ViewContetntSharedLib from \"../../views/content/ViewContetntSharedLib\";\n\nconst empList = [\n  {\n    id: 1,\n    name: \"Neeraj\",\n    email: \"neeraj@gmail.com\",\n    phone: 9876543210,\n    city: \"Bangalore\",\n  },\n  {\n    id: 2,\n    name: \"Raj\",\n    email: \"raj@gmail.com\",\n    phone: 9812345678,\n    city: \"Chennai\",\n  },\n  {\n    id: 3,\n    name: \"David\",\n    email: \"david342@gmail.com\",\n    phone: 7896536289,\n    city: \"Jaipur\",\n  },\n  {\n    id: 4,\n    name: \"Vikas\",\n    email: \"vikas75@gmail.com\",\n    phone: 9087654321,\n    city: \"Hyderabad\",\n  },\n];\n\nexport default function Libraries() {\n  const theme = useTheme();\n  const [data, setData] = useState(empList);\n  const columns = [\n    { title: \"ID\", field: \"id\", editable: false },\n    { title: \"Name\", field: \"name\" },\n    { title: \"Email\", field: \"email\" },\n    { title: \"Phone Number\", field: \"phone\" },\n    { title: \"City\", field: \"city\" },\n  ];\n\n  return (\n    <Grid\n      container\n      spacing={6}\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ p: 10 }}\n    >\n      <Grid item size={{ md: 12 }}>\n        <Typography variant=\"h5\" sx={{ color: \"text.main\", fontWeight: 800 }}>\n          Libraries\n        </Typography>\n        <Divider sx={{ m: \"0\", color: theme.palette.customColors.dark }} />\n      </Grid>\n      <Grid item size={{ md: 12 }}>\n        <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n          {\n            \"The list below contains all libraries defined by your organization, along with some statistical information about the library content.\"\n          }\n          <br />\n          {\n            \"- Libraries of the type 'Private' are owned by site, can only be used by that side, and can't be deleted.\"\n          }\n          <br />\n          {\n            \"-Libraries of the type 'Shared' are owned by the oraganization, can be shared by mulitple sites, and can deleted by user.\"\n          }\n        </Typography>\n        <br />\n        <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n          {\n            \"The administration of content libraries, including the ability to create new ones, is located here.\"\n          }\n        </Typography>\n        <Divider sx={{ m: \"0\", color: theme.palette.customColors.dark }} />\n      </Grid>\n      <Grid item size={{ md: 12 }}>\n        <ViewContetntSharedLib />\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["dummyUsers","id","libraryID","site","type","channelAssignmentCMS","folder","contentAssets","role","status","assignedBots","name","tags","profilePic","userRoleObj","admin","icon","color","auditor","manager","agent","creator","userStatusObj","online","offline","inactive","renderClient","row","_row$profilePic","_userRoleObj$row$role","length","_jsx","CustomAvatar","src","sx","mr","width","height","skin","fontSize","children","getInitials","toUpperCase","ViewContetntSharedLib","value","setValue","useState","pageSize","setPageSize","filterList","setFilterList","selectedRole","setSelectedRole","page","setPage","isDrawerOpen","setIsDrawerOpen","open","setOpen","theme","useTheme","selectedId","setSelectedId","useMediaQuery","breakpoints","down","selectedUser","setSelectedUser","isDeleting","setIsDeleting","navigate","useNavigate","sortModel","setSortModel","useCallback","val","filteredData","filter","item","startsWith","toLowerCase","includes","e","target","user","field","sort","columns","flex","minWidth","headerName","renderCell","_ref","_jsxs","Box","display","alignItems","flexDirection","Typography","noWrap","component","fontWeight","palette","text","secondary","textDecoration","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","CustomChip","rounded","size","label","Grid","container","spacing","xs","Card","DataGrid","autoHeight","onSortModelChange","model","getRowId","_id","rows","loading","rowCount","disableSelectionOnClick","rowsPerPageOptions","paginationMode","pagination","onPageChange","newPage","onPageSizeChange","newPageSize","getRowHeight","disableColumnMenu","disableColumnSelector","onCellClick","params","_params$event","_params$row","_params$row2","event","stopPropagation","empList","email","phone","city","Libraries","data","setData","direction","justifyContent","p","md","variant","Divider","m","customColors","dark"],"sourceRoot":""}